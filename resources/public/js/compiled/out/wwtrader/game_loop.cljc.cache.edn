;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.game-loop, :imports nil, :requires {game wwtrader.models.game, wwtrader.models.game wwtrader.models.game, camera wwtrader.camera, wwtrader.camera wwtrader.camera, element wwtrader.models.element, wwtrader.models.element wwtrader.models.element}, :uses nil, :defs {element-turn {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 9, :column 8, :end-line 9, :end-column 20, :private true, :arglists (quote ([result element])), :doc "Calls element turn"}, :private true, :name wwtrader.game-loop/element-turn, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 20, :method-params ([result element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([result element])), :doc "Calls element turn"}, priority-sorter {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 20, :column 8, :end-line 20, :end-column 23, :private true, :arglists (quote ([element])), :doc "Sorts elements by priority"}, :private true, :name wwtrader.game-loop/priority-sorter, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 23, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element])), :doc "Sorts elements by priority"}, turn-elements {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 25, :column 7, :end-line 25, :end-column 20, :arglists (quote ([game])), :doc "Gets the elements to process on the turn, ordered by run priority"}, :name wwtrader.game-loop/turn-elements, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 20, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Gets the elements to process on the turn, ordered by run priority"}, process-elements-turn {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 30, :column 7, :end-line 30, :end-column 28, :arglists (quote ([game elements])), :doc "Processes the turn just for the given elements"}, :name wwtrader.game-loop/process-elements-turn, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 28, :method-params ([game elements]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game elements])), :doc "Processes the turn just for the given elements"}, trader {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 37, :column 7, :end-line 37, :end-column 13, :arglists (quote ([game])), :doc "Gets the trader of the current game"}, :name wwtrader.game-loop/trader, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 13, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Gets the trader of the current game"}, process-trader-turn {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 44, :column 7, :end-line 44, :end-column 26, :arglists (quote ([game])), :doc "Processes the trader's turn"}, :name wwtrader.game-loop/process-trader-turn, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 26, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Processes the trader's turn"}, process-cpu-turn {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 52, :column 7, :end-line 52, :end-column 23, :arglists (quote ([game])), :doc "Processes the cpu element's turn"}, :name wwtrader.game-loop/process-cpu-turn, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 23, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Processes the cpu element's turn"}, process-turn {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 59, :column 7, :end-line 59, :end-column 19, :arglists (quote ([game])), :doc "Processes a single turn in the game"}, :name wwtrader.game-loop/process-turn, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 19, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Processes a single turn in the game"}, process-turns {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :line 64, :column 7, :end-line 64, :end-column 20, :arglists (quote ([game n])), :doc "Processes n turns"}, :name wwtrader.game-loop/process-turns, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_loop.cljc", :end-column 20, :method-params ([game n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game n])), :doc "Processes n turns"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:game :success}, :order [:game :success]}, :doc "Runs the game and all the elements, turn by turn, until the\n  game is over"}