;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.game-generator, :imports nil, :requires {market wwtrader.models.market, skill-giver wwtrader.models.skill-giver, wwtrader.models.obstacle-with-line-of-sight wwtrader.models.obstacle-with-line-of-sight, wwtrader.models.supply-farm wwtrader.models.supply-farm, supply-farm wwtrader.models.supply-farm, wwtrader.models.god wwtrader.models.god, coord wwtrader.models.coordinate, wwtrader.models.obstacle wwtrader.models.obstacle, wwtrader.models.trader wwtrader.models.trader, resource-generator wwtrader.models.resource-generator, wwtrader.models.market wwtrader.models.market, wwtrader.models.action wwtrader.models.action, game wwtrader.models.game, wwtrader.models.skill-giver wwtrader.models.skill-giver, wwtrader.models.resource-generator wwtrader.models.resource-generator, wwtrader.models.element wwtrader.models.element, wwtrader.models.coordinate wwtrader.models.coordinate, god wwtrader.models.god, obstacle wwtrader.models.obstacle, visibility-obstacle wwtrader.models.obstacle-with-line-of-sight, trader wwtrader.models.trader, wwtrader.camera wwtrader.camera, e wwtrader.models.element, wwtrader.models.bandit wwtrader.models.bandit, bandit wwtrader.models.bandit, wwtrader.models.game wwtrader.models.game, camera wwtrader.camera, action wwtrader.models.action}, :uses nil, :defs {get-small-windows {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_generator.cljc", :line 19, :column 7, :end-line 19, :end-column 24, :arglists (quote ([])), :doc "Returns the start point for all 3x3 windows on the map"}, :name wwtrader.game-generator/get-small-windows, :variadic false, :file "src/wwtrader/game_generator.cljc", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns the start point for all 3x3 windows on the map"}, random-element {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_generator.cljc", :line 27, :column 7, :end-line 27, :end-column 21, :arglists (quote ([coord])), :doc "Gets a random element for the scenary"}, :name wwtrader.game-generator/random-element, :variadic false, :file "src/wwtrader/game_generator.cljc", :end-column 21, :method-params ([coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coord])), :doc "Gets a random element for the scenary"}, populate-windows {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_generator.cljc", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([game [sx sy]])), :doc "Populates a window with elements"}, :name wwtrader.game-generator/populate-windows, :variadic false, :file "src/wwtrader/game_generator.cljc", :end-column 23, :method-params ([game p__27820]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game [sx sy]])), :doc "Populates a window with elements"}, empty-game {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_generator.cljc", :line 53, :column 7, :end-line 53, :end-column 17, :arglists (quote ([])), :doc "Generates an empty game"}, :name wwtrader.game-generator/empty-game, :variadic false, :file "src/wwtrader/game_generator.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Generates an empty game"}, game-with-random-scenary {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_generator.cljc", :line 60, :column 7, :end-line 60, :end-column 31, :arglists (quote ([])), :doc "Generates a game with random scenary"}, :name wwtrader.game-generator/game-with-random-scenary, :variadic false, :file "src/wwtrader/game_generator.cljc", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Generates a game with random scenary"}, add-cities {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_generator.cljc", :line 65, :column 7, :end-line 65, :end-column 17, :arglists (quote ([game])), :doc "Adds the cities to the game"}, :name wwtrader.game-generator/add-cities, :variadic false, :file "src/wwtrader/game_generator.cljc", :end-column 17, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Adds the cities to the game"}, add-skill-givers {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_generator.cljc", :line 78, :column 7, :end-line 78, :end-column 23, :arglists (quote ([game])), :doc "Adds the skill givers to the game"}, :name wwtrader.game-generator/add-skill-givers, :variadic false, :file "src/wwtrader/game_generator.cljc", :end-column 23, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Adds the skill givers to the game"}, random {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/game_generator.cljc", :line 86, :column 7, :end-line 86, :end-column 13, :arglists (quote ([])), :doc "Generates a random game"}, :name wwtrader.game-generator/random, :variadic false, :file "src/wwtrader/game_generator.cljc", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Generates a random game"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :water :mountain}, :order [:water :else :mountain]}, :doc "Generates random games"}