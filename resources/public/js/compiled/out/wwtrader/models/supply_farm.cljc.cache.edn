;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.models.supply-farm, :imports nil, :requires {e wwtrader.models.element, wwtrader.models.element wwtrader.models.element, trader wwtrader.models.trader, wwtrader.models.trader wwtrader.models.trader, coord wwtrader.models.coordinate, wwtrader.models.coordinate wwtrader.models.coordinate, game wwtrader.models.game, wwtrader.models.game wwtrader.models.game}, :uses nil, :defs {process {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/supply_farm.cljc", :line 9, :column 8, :end-line 9, :end-column 15, :private true, :arglists (quote ([elem result])), :doc "Processes the turn from given actions"}, :private true, :name wwtrader.models.supply-farm/process, :variadic false, :file "src/wwtrader/models/supply_farm.cljc", :end-column 15, :method-params ([elem result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem result])), :doc "Processes the turn from given actions"}, interact-with {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/supply_farm.cljc", :line 14, :column 8, :end-line 14, :end-column 21, :private true, :arglists (quote ([farm other game])), :doc "Interacts with another element"}, :private true, :name wwtrader.models.supply-farm/interact-with, :variadic false, :file "src/wwtrader/models/supply_farm.cljc", :end-column 21, :method-params ([farm other game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([farm other game])), :doc "Interacts with another element"}, SupplyFarm {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection wwtrader.models.element/Element cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name wwtrader.models.supply-farm/SupplyFarm, :file "src/wwtrader/models/supply_farm.cljc", :end-column 22, :type true, :column 12, :internal-ctor true, :line 25, :record true, :end-line 25, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->SupplyFarm {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/supply_farm.cljc", :line 25, :column 12, :end-line 25, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([id coord cost]))}, :name wwtrader.models.supply-farm/->SupplyFarm, :variadic false, :file "src/wwtrader/models/supply_farm.cljc", :end-column 22, :method-params ([id coord cost]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id coord cost]))}, map->SupplyFarm {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/supply_farm.cljc", :line 25, :column 12, :end-line 25, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__18422]))}, :name wwtrader.models.supply-farm/map->SupplyFarm, :variadic false, :file "src/wwtrader/models/supply_farm.cljc", :end-column 22, :method-params ([G__18422]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18422]))}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/supply_farm.cljc", :line 34, :column 7, :end-line 34, :end-column 13, :arglists (quote ([coord])), :doc "Creates a new SupplyFarm"}, :name wwtrader.models.supply-farm/create, :variadic false, :file "src/wwtrader/models/supply_farm.cljc", :end-column 13, :method-params ([coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coord])), :doc "Creates a new SupplyFarm"}, cost {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/supply_farm.cljc", :line 39, :column 7, :end-line 39, :end-column 11, :arglists (quote ([farm])), :doc "Gets the cost of this supply farm"}, :name wwtrader.models.supply-farm/cost, :variadic false, :file "src/wwtrader/models/supply_farm.cljc", :end-column 11, :method-params ([farm]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([farm])), :doc "Gets the cost of this supply farm"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{cost :coord :game coord :cargo-full :note :success :got-resource :id :cost id}, :order [:success :game :cost :got-resource :note :cargo-full :id :coord id coord cost]}, :doc "Sells supplies"}