;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.models.skill-giver, :imports nil, :requires {t wwtrader.models.target, coord wwtrader.models.coordinate, wwtrader.models.trader wwtrader.models.trader, game wwtrader.models.game, wwtrader.models.element wwtrader.models.element, wwtrader.models.coordinate wwtrader.models.coordinate, trader wwtrader.models.trader, e wwtrader.models.element, wwtrader.models.game wwtrader.models.game, wwtrader.models.target wwtrader.models.target}, :uses nil, :defs {SkillGiver {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection wwtrader.models.element/Element cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name wwtrader.models.skill-giver/SkillGiver, :file "src/wwtrader/models/skill_giver.cljc", :end-column 22, :type true, :column 12, :internal-ctor true, :line 10, :record true, :end-line 10, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->SkillGiver {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/skill_giver.cljc", :line 10, :column 12, :end-line 10, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([id coord visual skill]))}, :name wwtrader.models.skill-giver/->SkillGiver, :variadic false, :file "src/wwtrader/models/skill_giver.cljc", :end-column 22, :method-params ([id coord visual skill]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 10, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([id coord visual skill]))}, map->SkillGiver {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/skill_giver.cljc", :line 10, :column 12, :end-line 10, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__22291]))}, :name wwtrader.models.skill-giver/map->SkillGiver, :variadic false, :file "src/wwtrader/models/skill_giver.cljc", :end-column 22, :method-params ([G__22291]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__22291]))}, elem-type {:name wwtrader.models.skill-giver/elem-type, :file "src/wwtrader/models/skill_giver.cljc", :line 21, :column 1, :end-line 21, :end-column 15, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/skill_giver.cljc", :line 21, :column 6, :end-line 21, :end-column 15}}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/skill_giver.cljc", :line 23, :column 7, :end-line 23, :end-column 13, :arglists (quote ([coord] [coord skill])), :doc "Creates a new SkillGiver", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coord] [coord skill]), :arglists ([coord] [coord skill]), :arglists-meta (nil nil)}}, :name wwtrader.models.skill-giver/create, :variadic false, :file "src/wwtrader/models/skill_giver.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coord] [coord skill]), :arglists ([coord] [coord skill]), :arglists-meta (nil nil)}, :method-params ([coord] [coord skill]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([coord] [coord skill]), :doc "Creates a new SkillGiver"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:coord :skill :game coord skill :success :id :heal :visual id visual}, :order [:id :coord :visual :skill :success :game id coord visual skill :heal]}, :doc "Gives a skill to the player"}