;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.models.decoy, :imports nil, :requires {e wwtrader.models.element, wwtrader.models.element wwtrader.models.element, t wwtrader.models.target, wwtrader.models.target wwtrader.models.target, coord wwtrader.models.coordinate, wwtrader.models.coordinate wwtrader.models.coordinate, game wwtrader.models.game, wwtrader.models.game wwtrader.models.game}, :uses nil, :defs {give-money {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([elem money])), :doc "Gives money from trader"}, :name wwtrader.models.decoy/give-money, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :end-column 17, :method-params ([elem money]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem money])), :doc "Gives money from trader"}, Decoy {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection wwtrader.models.element/Element cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable wwtrader.models.target/Target cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name wwtrader.models.decoy/Decoy, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 14, :record true, :end-line 14, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Decoy {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :line 14, :column 12, :end-line 14, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([id coord visual value]))}, :name wwtrader.models.decoy/->Decoy, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :end-column 17, :method-params ([id coord visual value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 14, :end-line 14, :max-fixed-arity 4, :fn-var true, :arglists (quote ([id coord visual value]))}, map->Decoy {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :line 14, :column 12, :end-line 14, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__18120]))}, :name wwtrader.models.decoy/map->Decoy, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :end-column 17, :method-params ([G__18120]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18120]))}, elem-type {:name wwtrader.models.decoy/elem-type, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :line 29, :column 1, :end-line 29, :end-column 15, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :line 29, :column 6, :end-line 29, :end-column 15}}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :line 31, :column 7, :end-line 31, :end-column 13, :arglists (quote ([coord] [coord visual])), :doc "Creates a new Decoy", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coord] [coord visual]), :arglists ([coord] [coord visual]), :arglists-meta (nil nil)}}, :name wwtrader.models.decoy/create, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/decoy.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coord] [coord visual]), :arglists ([coord] [coord visual]), :arglists-meta (nil nil)}, :method-params ([coord] [coord visual]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists ([coord] [coord visual]), :doc "Creates a new Decoy"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:coord :money :game coord :value value :success :id :visual id :mountain visual}, :order [:money :id :coord :visual :value :success :game id coord visual value :mountain]}, :doc "Enemies target the decoy"}