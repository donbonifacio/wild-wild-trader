;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.models.action, :imports nil, :requires nil, :uses nil, :defs {moved-y? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 23, :column 7, :end-line 23, :end-column 15, :arglists (quote ([action])), :doc "True if the given action translated to moving on x"}, :name wwtrader.models.action/moved-y?, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :end-column 15, :method-params ([action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([action])), :doc "True if the given action translated to moving on x"}, ->Action {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 5, :column 12, :end-line 5, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([action-type args]))}, :name wwtrader.models.action/->Action, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :end-column 18, :method-params ([action-type args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([action-type args]))}, sleep {:name wwtrader.models.action/sleep, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 14, :column 1, :end-line 14, :end-column 11, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 14, :column 6, :end-line 14, :end-column 11}}, left {:name wwtrader.models.action/left, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 7, :column 1, :end-line 7, :end-column 10, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 7, :column 6, :end-line 7, :end-column 10}}, down {:name wwtrader.models.action/down, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 10, :column 1, :end-line 10, :end-column 10, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 10, :column 6, :end-line 10, :end-column 10}}, take-supplies {:name wwtrader.models.action/take-supplies, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 12, :column 1, :end-line 12, :end-column 19, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 12, :column 6, :end-line 12, :end-column 19}}, moved-x? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([action])), :doc "True if the given action translated to moving on x"}, :name wwtrader.models.action/moved-x?, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :end-column 15, :method-params ([action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([action])), :doc "True if the given action translated to moving on x"}, up {:name wwtrader.models.action/up, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 9, :column 1, :end-line 9, :end-column 8, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 9, :column 6, :end-line 9, :end-column 8}}, map->Action {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 5, :column 12, :end-line 5, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__18028]))}, :name wwtrader.models.action/map->Action, :variadic false, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :end-column 18, :method-params ([G__18028]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18028]))}, decoy {:name wwtrader.models.action/decoy, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 15, :column 1, :end-line 15, :end-column 11, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 15, :column 6, :end-line 15, :end-column 11}}, Action {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name wwtrader.models.action/Action, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 5, :record true, :end-line 5, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, right {:name wwtrader.models.action/right, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 8, :column 1, :end-line 8, :end-column 11, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 8, :column 6, :end-line 8, :end-column 11}}, heal {:name wwtrader.models.action/heal, :file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 13, :column 1, :end-line 13, :end-column 10, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/action.cljc", :line 13, :column 6, :end-line 13, :end-column 10}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:args :take-supplies action-type args :move :energy :decoy :heal :sleep :action-type}, :order [:action-type :args action-type args :move :take-supplies :heal :energy :sleep :decoy]}, :doc "Represents what the player can do"}