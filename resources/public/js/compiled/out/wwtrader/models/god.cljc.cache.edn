;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.models.god, :imports nil, :requires {desperado wwtrader.models.desperado, coord wwtrader.models.coordinate, wwtrader.models.desperado wwtrader.models.desperado, apache wwtrader.models.apache, wwtrader.models.trader wwtrader.models.trader, burglar wwtrader.models.burglar, game wwtrader.models.game, wwtrader.models.element wwtrader.models.element, wwtrader.models.coordinate wwtrader.models.coordinate, trader wwtrader.models.trader, e wwtrader.models.element, wwtrader.models.enemy wwtrader.models.enemy, enemy wwtrader.models.enemy, wwtrader.models.decoy wwtrader.models.decoy, wwtrader.models.apache wwtrader.models.apache, wwtrader.models.bandit wwtrader.models.bandit, bandit wwtrader.models.bandit, decoy wwtrader.models.decoy, wwtrader.models.burglar wwtrader.models.burglar, wwtrader.models.game wwtrader.models.game}, :uses nil, :defs {random-enemy {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/god.cljc", :line 15, :column 8, :end-line 15, :end-column 20, :private true, :arglists (quote ([])), :doc "Returns a random enemy type"}, :private true, :name wwtrader.models.god/random-enemy, :variadic false, :file "src/wwtrader/models/god.cljc", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a random enemy type"}, add-random-enemy {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/god.cljc", :line 25, :column 7, :end-line 25, :end-column 23, :arglists (quote ([game])), :doc "Adds a random enemy"}, :name wwtrader.models.god/add-random-enemy, :variadic false, :file "src/wwtrader/models/god.cljc", :end-column 23, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Adds a random enemy"}, enemies-to-spawn {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/god.cljc", :line 30, :column 7, :end-line 30, :end-column 23, :arglists (quote ([game])), :doc "The number of enemies to spawn on the given game"}, :name wwtrader.models.god/enemies-to-spawn, :variadic false, :file "src/wwtrader/models/god.cljc", :end-column 23, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "The number of enemies to spawn on the given game"}, add-random-enemies {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/god.cljc", :line 40, :column 7, :end-line 40, :end-column 25, :arglists (quote ([game])), :doc "Adds several enemies"}, :name wwtrader.models.god/add-random-enemies, :variadic false, :file "src/wwtrader/models/god.cljc", :end-column 25, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Adds several enemies"}, process {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/god.cljc", :line 54, :column 8, :end-line 54, :end-column 15, :private true, :arglists (quote ([elem result])), :doc "Processes the turn from given actions"}, :private true, :name wwtrader.models.god/process, :variadic false, :file "src/wwtrader/models/god.cljc", :end-column 15, :method-params ([elem result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem result])), :doc "Processes the turn from given actions"}, God {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection wwtrader.models.element/Element cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name wwtrader.models.god/God, :file "src/wwtrader/models/god.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 61, :record true, :end-line 61, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->God {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/god.cljc", :line 61, :column 12, :end-line 61, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([id]))}, :name wwtrader.models.god/->God, :variadic false, :file "src/wwtrader/models/god.cljc", :end-column 15, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, map->God {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/god.cljc", :line 61, :column 12, :end-line 61, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__18480]))}, :name wwtrader.models.god/map->God, :variadic false, :file "src/wwtrader/models/god.cljc", :end-column 15, :method-params ([G__18480]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18480]))}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/god.cljc", :line 70, :column 7, :end-line 70, :end-column 13, :arglists (quote ([])), :doc "Creates a new God"}, :name wwtrader.models.god/create, :variadic false, :file "src/wwtrader/models/god.cljc", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Creates a new God"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:game :success :id id}, :order [:success :game :id id]}, :doc "Makes the world go round"}