;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.models.market, :imports nil, :requires {e wwtrader.models.element, wwtrader.models.element wwtrader.models.element, coord wwtrader.models.coordinate, wwtrader.models.coordinate wwtrader.models.coordinate, trader wwtrader.models.trader, wwtrader.models.trader wwtrader.models.trader, game wwtrader.models.game, wwtrader.models.game wwtrader.models.game}, :uses nil, :defs {process {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/market.cljc", :line 9, :column 8, :end-line 9, :end-column 15, :private true, :arglists (quote ([elem game])), :doc "Processes the Market's turn"}, :private true, :name wwtrader.models.market/process, :variadic false, :file "src/wwtrader/models/market.cljc", :end-column 15, :method-params ([elem game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem game])), :doc "Processes the Market's turn"}, interact-with {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/market.cljc", :line 14, :column 8, :end-line 14, :end-column 21, :private true, :arglists (quote ([market trader game])), :doc "Interacts with another element"}, :private true, :name wwtrader.models.market/interact-with, :variadic false, :file "src/wwtrader/models/market.cljc", :end-column 21, :method-params ([market trader game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([market trader game])), :doc "Interacts with another element"}, Market {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection wwtrader.models.element/Element cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name wwtrader.models.market/Market, :file "src/wwtrader/models/market.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 27, :record true, :end-line 27, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Market {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/market.cljc", :line 27, :column 12, :end-line 27, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([id coord resource]))}, :name wwtrader.models.market/->Market, :variadic false, :file "src/wwtrader/models/market.cljc", :end-column 18, :method-params ([id coord resource]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id coord resource]))}, map->Market {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/market.cljc", :line 27, :column 12, :end-line 27, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__18508]))}, :name wwtrader.models.market/map->Market, :variadic false, :file "src/wwtrader/models/market.cljc", :end-column 18, :method-params ([G__18508]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18508]))}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/market.cljc", :line 36, :column 7, :end-line 36, :end-column 13, :arglists (quote ([coord] [coord resource])), :doc "Creates a new Market", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coord] [coord resource]), :arglists ([coord] [coord resource]), :arglists-meta (nil nil)}}, :name wwtrader.models.market/create, :variadic false, :file "src/wwtrader/models/market.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coord] [coord resource]), :arglists ([coord] [coord resource]), :arglists-meta (nil nil)}, :method-params ([coord] [coord resource]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists ([coord] [coord resource]), :doc "Creates a new Market"}, resource {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/market.cljc", :line 43, :column 7, :end-line 43, :end-column 15, :arglists (quote ([generator])), :doc "Gets the resource that this generator is buying"}, :name wwtrader.models.market/resource, :variadic false, :file "src/wwtrader/models/market.cljc", :end-column 15, :method-params ([generator]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([generator])), :doc "Gets the resource that this generator is buying"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:coord :money :game coord :sold :success :id :resource id resource}, :order [:resource :success :sold :money :game :id :coord id coord resource]}, :doc "Buys resources"}