;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.models.obstacle-with-line-of-sight, :imports nil, :requires {e wwtrader.models.element, wwtrader.models.element wwtrader.models.element, trader wwtrader.models.trader, wwtrader.models.trader wwtrader.models.trader, coord wwtrader.models.coordinate, wwtrader.models.coordinate wwtrader.models.coordinate, game wwtrader.models.game, wwtrader.models.game wwtrader.models.game}, :uses nil, :defs {ObstacleWithLineOfSight {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection wwtrader.models.element/Element cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name wwtrader.models.obstacle-with-line-of-sight/ObstacleWithLineOfSight, :file "src/wwtrader/models/obstacle_with_line_of_sight.cljc", :end-column 35, :type true, :column 12, :internal-ctor true, :line 9, :record true, :end-line 9, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->ObstacleWithLineOfSight {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/obstacle_with_line_of_sight.cljc", :line 9, :column 12, :end-line 9, :end-column 35, :internal-ctor true, :factory :positional, :arglists (quote ([id coord visual can-see-over?]))}, :name wwtrader.models.obstacle-with-line-of-sight/->ObstacleWithLineOfSight, :variadic false, :file "src/wwtrader/models/obstacle_with_line_of_sight.cljc", :end-column 35, :method-params ([id coord visual can-see-over?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 9, :end-line 9, :max-fixed-arity 4, :fn-var true, :arglists (quote ([id coord visual can-see-over?]))}, map->ObstacleWithLineOfSight {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/obstacle_with_line_of_sight.cljc", :line 9, :column 12, :end-line 9, :end-column 35, :internal-ctor true, :factory :map, :arglists (quote ([G__18405]))}, :name wwtrader.models.obstacle-with-line-of-sight/map->ObstacleWithLineOfSight, :variadic false, :file "src/wwtrader/models/obstacle_with_line_of_sight.cljc", :end-column 35, :method-params ([G__18405]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18405]))}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/obstacle_with_line_of_sight.cljc", :line 18, :column 7, :end-line 18, :end-column 13, :arglists (quote ([coord] [coord visual])), :doc "Creates a new ObstacleWithLineOfSight", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coord] [coord visual]), :arglists ([coord] [coord visual]), :arglists-meta (nil nil)}}, :name wwtrader.models.obstacle-with-line-of-sight/create, :variadic false, :file "src/wwtrader/models/obstacle_with_line_of_sight.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coord] [coord visual]), :arglists ([coord] [coord visual]), :arglists-meta (nil nil)}, :method-params ([coord] [coord visual]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists ([coord] [coord visual]), :doc "Creates a new ObstacleWithLineOfSight"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{can-see-over? :coord :game coord :success :id :visual :can-see-over? id :water visual}, :order [:id :coord :visual :can-see-over? :success :game id coord visual can-see-over? :water]}, :doc "Don't allow move but allows fire through"}