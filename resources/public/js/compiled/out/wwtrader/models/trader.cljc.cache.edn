;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader.models.trader, :imports nil, :requires {t wwtrader.models.target, coord wwtrader.models.coordinate, wwtrader.models.action wwtrader.models.action, game wwtrader.models.game, wwtrader.models.element wwtrader.models.element, wwtrader.models.coordinate wwtrader.models.coordinate, e wwtrader.models.element, wwtrader.models.enemy wwtrader.models.enemy, enemy wwtrader.models.enemy, wwtrader.models.decoy wwtrader.models.decoy, decoy wwtrader.models.decoy, wwtrader.models.game wwtrader.models.game, wwtrader.models.target wwtrader.models.target, action wwtrader.models.action}, :uses nil, :defs {not-in-camera? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 196, :column 7, :end-line 196, :end-column 21, :arglists (quote ([game coord])), :doc "True if the given coordinate is not on the game's current camera"}, :name wwtrader.models.trader/not-in-camera?, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 21, :method-params ([game coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game coord])), :doc "True if the given coordinate is not on the game's current camera"}, run-action {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 260, :column 7, :end-line 260, :end-column 17, :arglists (quote ([action trader game f])), :doc "Runs an action"}, :name wwtrader.models.trader/run-action, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 17, :method-params ([action trader game f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 4, :fn-var true, :arglists (quote ([action trader game f])), :doc "Runs an action"}, attack {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 221, :column 8, :end-line 221, :end-column 14, :private true, :arglists (quote ([game elem enemy])), :doc "Attackes another element"}, :private true, :name wwtrader.models.trader/attack, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 14, :method-params ([game elem enemy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game elem enemy])), :doc "Attackes another element"}, verify-action {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 272, :column 7, :end-line 272, :end-column 20, :arglists (quote ([action trader game f])), :doc "Verify that an action can be queued"}, :name wwtrader.models.trader/verify-action, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 20, :method-params ([action trader game f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 4, :fn-var true, :arglists (quote ([action trader game f])), :doc "Verify that an action can be queued"}, default-skills {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 118, :column 8, :end-line 118, :end-column 22, :private true, :arglists (quote ([])), :doc "Configures the default skills"}, :private true, :name wwtrader.models.trader/default-skills, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Configures the default skills"}, cleanup {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 78, :column 8, :end-line 78, :end-column 15, :private true, :arglists (quote ([result elem])), :doc "Resets trader info"}, :private true, :name wwtrader.models.trader/cleanup, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 15, :method-params ([result elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([result elem])), :doc "Resets trader info"}, ->Trader {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 102, :column 12, :end-line 102, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([id coord hitpoints cargo cargo-limit money energy skills damage-taken attacked? on-move-action]))}, :name wwtrader.models.trader/->Trader, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 18, :method-params ([id coord hitpoints cargo cargo-limit money energy skills damage-taken attacked? on-move-action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 102, :end-line 102, :max-fixed-arity 11, :fn-var true, :arglists (quote ([id coord hitpoints cargo cargo-limit money energy skills damage-taken attacked? on-move-action]))}, enemy-in-range {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 201, :column 7, :end-line 201, :end-column 21, :arglists (quote ([action elem game])), :doc "Gets an enemy in range to attack, if any"}, :name wwtrader.models.trader/enemy-in-range, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 21, :method-params ([action elem game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 3, :fn-var true, :arglists (quote ([action elem game])), :doc "Gets an enemy in range to attack, if any"}, interact {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 15, :column 8, :end-line 15, :end-column 16, :private true, :arglists (quote ([game elem new-coord])), :doc "Interacts with another element"}, :private true, :name wwtrader.models.trader/interact, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 16, :method-params ([game elem new-coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game elem new-coord])), :doc "Interacts with another element"}, move-trader {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 71, :column 8, :end-line 71, :end-column 19, :private true, :arglists (quote ([game trader new-coord])), :doc "Processes movement for the trader"}, :private true, :name wwtrader.models.trader/move-trader, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 19, :method-params ([game trader new-coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game trader new-coord])), :doc "Processes movement for the trader"}, money {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 160, :column 7, :end-line 160, :end-column 12, :arglists (quote ([trader])), :doc "Handles the trader's money"}, :name wwtrader.models.trader/money, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 12, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "Handles the trader's money"}, take-energy {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 35, :column 7, :end-line 35, :end-column 18, :arglists (quote ([trader taken-energy])), :doc "Removes energy from the trader"}, :name wwtrader.models.trader/take-energy, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 18, :method-params ([trader taken-energy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trader taken-energy])), :doc "Removes energy from the trader"}, add-cargo {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 138, :column 7, :end-line 138, :end-column 16, :arglists (quote ([trader cargo-item])), :doc "Adds cargo to the trader"}, :name wwtrader.models.trader/add-cargo, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 16, :method-params ([trader cargo-item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trader cargo-item])), :doc "Adds cargo to the trader"}, remove-cargo-once {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 153, :column 7, :end-line 153, :end-column 24, :arglists (quote ([trader item])), :doc "Removes a single cargo item"}, :name wwtrader.models.trader/remove-cargo-once, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 24, :method-params ([trader item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trader item])), :doc "Removes a single cargo item"}, cargo {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 128, :column 7, :end-line 128, :end-column 12, :arglists (quote ([trader])), :doc "Gets the trader's cargo"}, :name wwtrader.models.trader/cargo, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 12, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "Gets the trader's cargo"}, on-move-action {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 52, :column 7, :end-line 52, :end-column 21, :arglists (quote ([trader] [trader action])), :doc "Sets an action that will be run when the trader moves", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([trader] [trader action]), :arglists ([trader] [trader action]), :arglists-meta (nil nil)}}, :name wwtrader.models.trader/on-move-action, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([trader] [trader action]), :arglists ([trader] [trader action]), :arglists-meta (nil nil)}, :method-params ([trader] [trader action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists ([trader] [trader action]), :doc "Sets an action that will be run when the trader moves"}, elem-type {:name wwtrader.models.trader/elem-type, :file "src/wwtrader/models/trader.cljc", :line 116, :column 1, :end-line 116, :end-column 15, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 116, :column 6, :end-line 116, :end-column 15}}, create {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 123, :column 7, :end-line 123, :end-column 13, :arglists (quote ([coord])), :doc "Creates a new Trader"}, :name wwtrader.models.trader/create, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 13, :method-params ([coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coord])), :doc "Creates a new Trader"}, cargo-space-available? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 133, :column 7, :end-line 133, :end-column 29, :arglists (quote ([trader])), :doc "True if this trader has space in cargo"}, :name wwtrader.models.trader/cargo-space-available?, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 29, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "True if this trader has space in cargo"}, hitpoints {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([trader] [trader new-hitpoints])), :doc "Handles the trader's hitpoints", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([trader] [trader new-hitpoints]), :arglists ([trader] [trader new-hitpoints]), :arglists-meta (nil nil)}}, :name wwtrader.models.trader/hitpoints, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([trader] [trader new-hitpoints]), :arglists ([trader] [trader new-hitpoints]), :arglists-meta (nil nil)}, :method-params ([trader] [trader new-hitpoints]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists ([trader] [trader new-hitpoints]), :doc "Handles the trader's hitpoints"}, process {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 91, :column 8, :end-line 91, :end-column 15, :private true, :arglists (quote ([elem result])), :doc "Processes the turn from given actions"}, :private true, :name wwtrader.models.trader/process, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 15, :method-params ([elem result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem result])), :doc "Processes the turn from given actions"}, give-money {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 170, :column 7, :end-line 170, :end-column 17, :arglists (quote ([trader money])), :doc "Gives money from trader"}, :name wwtrader.models.trader/give-money, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 17, :method-params ([trader money]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trader money])), :doc "Gives money from trader"}, remove-items-for-money {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 175, :column 7, :end-line 175, :end-column 29, :arglists (quote ([trader item money])), :doc "Removes items and stores money"}, :name wwtrader.models.trader/remove-items-for-money, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 29, :method-params ([trader item money]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 3, :fn-var true, :arglists (quote ([trader item money])), :doc "Removes items and stores money"}, clear-cargo {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 148, :column 7, :end-line 148, :end-column 18, :arglists (quote ([trader])), :doc "Removes all cargo from trader"}, :name wwtrader.models.trader/clear-cargo, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 18, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "Removes all cargo from trader"}, add-damage {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 40, :column 7, :end-line 40, :end-column 17, :arglists (quote ([trader])), :doc "Adds damage to the trader"}, :name wwtrader.models.trader/add-damage, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 17, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "Adds damage to the trader"}, Trader {:num-fields 11, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection wwtrader.models.element/Element cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable wwtrader.models.target/Target cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name wwtrader.models.trader/Trader, :file "src/wwtrader/models/trader.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 102, :record true, :end-line 102, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, energy {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 28, :column 7, :end-line 28, :end-column 13, :arglists (quote ([trader] [trader new-energy])), :doc "Handles the trader's energy", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([trader] [trader new-energy]), :arglists ([trader] [trader new-energy]), :arglists-meta (nil nil)}}, :name wwtrader.models.trader/energy, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([trader] [trader new-energy]), :arglists ([trader] [trader new-energy]), :arglists-meta (nil nil)}, :method-params ([trader] [trader new-energy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists ([trader] [trader new-energy]), :doc "Handles the trader's energy"}, process-action {:name wwtrader.models.trader/process-action, :file "src/wwtrader/models/trader.cljc", :line 12, :column 1, :end-line 12, :end-column 25, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 12, :column 11, :end-line 12, :end-column 25}}, map->Trader {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 102, :column 12, :end-line 102, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__18158]))}, :name wwtrader.models.trader/map->Trader, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 18, :method-params ([G__18158]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__18158]))}, process-move-action {:name wwtrader.models.trader/process-move-action, :file "src/wwtrader/models/trader.cljc", :line 13, :column 1, :end-line 13, :end-column 30, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 13, :column 11, :end-line 13, :end-column 30}}, damage-taken {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 47, :column 7, :end-line 47, :end-column 19, :arglists (quote ([trader])), :doc "Damage taken on the turn"}, :name wwtrader.models.trader/damage-taken, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 19, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "Damage taken on the turn"}, clear-on-move-action {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 59, :column 7, :end-line 59, :end-column 27, :arglists (quote ([trader])), :doc "Removes on-move-action"}, :name wwtrader.models.trader/clear-on-move-action, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 27, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "Removes on-move-action"}, skills {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 181, :column 7, :end-line 181, :end-column 13, :arglists (quote ([trader])), :doc "Gets the possible skills for this trader"}, :name wwtrader.models.trader/skills, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 13, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "Gets the possible skills for this trader"}, attacked? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 229, :column 7, :end-line 229, :end-column 16, :arglists (quote ([trader])), :doc "True if the trader attacked on this turn"}, :name wwtrader.models.trader/attacked?, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 16, :method-params ([trader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trader])), :doc "True if the trader attacked on this turn"}, add-skill {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 186, :column 7, :end-line 186, :end-column 16, :arglists (quote ([trader skill])), :doc "Registers a new skill"}, :name wwtrader.models.trader/add-skill, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 16, :method-params ([trader skill]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trader skill])), :doc "Registers a new skill"}, take-money {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 165, :column 7, :end-line 165, :end-column 17, :arglists (quote ([trader money])), :doc "Takes money from trader"}, :name wwtrader.models.trader/take-money, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 17, :method-params ([trader money]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trader money])), :doc "Takes money from trader"}, process-on-move-action {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 64, :column 8, :end-line 64, :end-column 30, :private true, :arglists (quote ([game trader previous-coord])), :doc "Checks if the trader has an on-move-action and runs it"}, :private true, :name wwtrader.models.trader/process-on-move-action, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 30, :method-params ([game trader previous-coord]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 3, :fn-var true, :arglists (quote ([game trader previous-coord])), :doc "Checks if the trader has an on-move-action and runs it"}, opaque? {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 191, :column 7, :end-line 191, :end-column 14, :arglists (quote ([elem])), :doc "True if the trader can't see through the element"}, :name wwtrader.models.trader/opaque?, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 14, :method-params ([elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elem])), :doc "True if the trader can't see through the element"}, remove-cargo {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader/models/trader.cljc", :line 143, :column 7, :end-line 143, :end-column 19, :arglists (quote ([trader item])), :doc "Removes cargo (all entries for the given item)"}, :name wwtrader.models.trader/remove-cargo, :variadic false, :file "src/wwtrader/models/trader.cljc", :end-column 19, :method-params ([trader item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 2, :fn-var true, :arglists (quote ([trader item])), :doc "Removes cargo (all entries for the given item)"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:args :coord :money :take-supplies :idle :on-move-action :cargo :invalid-destination :dead :on-move-action-stored :else :game coord :default money :hitpoints :no-supplies cargo :move on-move-action :pos :no-energy :energy hitpoints :damage-taken :attacked? :cargo-limit :skills :success :decoy :id energy damage-taken :heal :error cargo-limit skills :game-over attacked? :can-see-over? id :hierarchy :sleep :message :action-type}, :order [:hierarchy :action-type :default :hitpoints :energy :damage-taken :on-move-action :game :pos :attacked? :success :idle :id :coord :cargo :cargo-limit :money :skills id coord hitpoints cargo cargo-limit money energy skills damage-taken attacked? on-move-action :take-supplies :can-see-over? :args :else :move :error :game-over :invalid-destination :no-supplies :dead :no-energy :heal :sleep :decoy :message :on-move-action-stored]}, :doc "Represents an entity that has a cargo and moves things from places to places"}