;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name wwtrader-playground.views.layout, :imports nil, :requires {state wwtrader-playground.state, wwtrader-playground.state wwtrader-playground.state, game-view wwtrader-playground.views.game, wwtrader-playground.views.game wwtrader-playground.views.game}, :uses nil, :defs {current-page {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader_playground/views/layout.cljs", :line 5, :column 8, :end-line 5, :end-column 20, :private true, :arglists (quote ([state]))}, :private true, :name wwtrader-playground.views.layout/current-page, :variadic false, :file "src/wwtrader_playground/views/layout.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, render {:protocol-inline nil, :meta {:file "/Users/pedrosantos/projects/donbonifacio/wwtrader/src/wwtrader_playground/views/layout.cljs", :line 11, :column 7, :end-line 11, :end-column 13, :arglists (quote ([] [state])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}}, :name wwtrader-playground.views.layout/render, :variadic false, :file "src/wwtrader_playground/views/layout.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}, :method-params ([] [state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists ([] [state])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :game :page :div :h1}, :order [:page :game :else :div :h1]}, :doc nil}